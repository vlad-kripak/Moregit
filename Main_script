‚è≥ –ñ–¥—ë–º 33 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –∫–æ–º–º–∏—Ç–æ–º...
[main 6278e34] Backdated commit #2
 Committer: root <root@v399369.hosted-by-vdsina.com>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 1 insertion(+)
ERROR: Repository not found.
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
‚è≥ –ñ–¥—ë–º 36 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –∫–æ–º–º–∏—Ç–æ–º...
[main a0c0890] Backdated commit #3
 Committer: root <root@v399369.hosted-by-vdsina.com>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 2 files changed, 2 insertions(+), 1 deletion(-)
ERROR: Repository not found.
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
‚è≥ –ñ–¥—ë–º 41 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –∫–æ–º–º–∏—Ç–æ–º...
root@v399369:~/sdig# cat /root/sdig/repos.txt
/root/sdig/gas-predictor
/root/sdig/wallet-batch-sender
/root/sdig/node-health-checker
root@v399369:~/sdig# ls /root/sdig/gas-predictor/.git
ls /root/sdig/wallet-batch-sender/.git
ls /root/sdig/node-health-checker/.git
branches        config       HEAD   index  logs     packed-refs
COMMIT_EDITMSG  description  hooks  info   objects  refs
branches        config       HEAD   index  logs     packed-refs
COMMIT_EDITMSG  description  hooks  info   objects  refs
branches        config       HEAD   index  logs     packed-refs
COMMIT_EDITMSG  description  hooks  info   objects  refs
root@v399369:~/sdig# # –ü—Ä–æ–≤–µ—Ä–∫–∞ remote-URL'–æ–≤
git -C /root/sdig/gas-predictor remote -v
git -C /root/sdig/wallet-batch-sender remote -v
git -C /root/sdig/node-health-checker remote -v
origin	git@github.com:tomilna/gas-predictor.git (fetch)
origin	git@github.com:tomilna/gas-predictor.git (push)
origin	git@github.com:tomilna/wallet-batch-sender.git (fetch)
origin	git@github.com:tomilna/wallet-batch-sender.git (push)
origin	git@github.com:tomilna/node-health-checker.git (fetch)
origin	git@github.com:tomilna/node-health-checker.git (push)
root@v399369:~/sdig# cat -A /root/sdig/repos.txt
/root/sdig/gas-predictor$
/root/sdig/wallet-batch-sender$
/root/sdig/node-health-checker$
root@v399369:~/sdig# cat -A /root/sdig/repos.txt
/root/sdig/gas-predictor$
/root/sdig/wallet-batch-sender$
/root/sdig/node-health-checker$
root@v399369:~/sdig# ls -la /root/sdig/gas-predictor
ls -la /root/sdig/wallet-batch-sender
ls -la /root/sdig/node-health-checker
total 20
drwxr-xr-x 3 root root 4096 Jul 10 19:43 .
drwxr-xr-x 6 root root 4096 Jul 10 22:24 ..
drwxr-xr-x 8 root root 4096 Jul 10 22:24 .git
-rw-r--r-- 1 root root  176 Jul 10 22:24 log.txt
-rw-r--r-- 1 root root  104 Jul 10 17:21 README.md
total 20
drwxr-xr-x 3 root root 4096 Jul 10 21:33 .
drwxr-xr-x 6 root root 4096 Jul 10 22:24 ..
drwxr-xr-x 8 root root 4096 Jul 10 22:25 .git
-rw-r--r-- 1 root root  176 Jul 10 22:25 log.txt
-rw-r--r-- 1 root root  136 Jul 10 17:22 README.md
total 24
drwxr-xr-x 3 root root 4096 Jul 10 21:45 .
drwxr-xr-x 6 root root 4096 Jul 10 22:24 ..
-rw-r--r-- 1 root root    2 Jul 10 22:26 farm_state.txt
drwxr-xr-x 8 root root 4096 Jul 10 22:25 .git
-rw-r--r-- 1 root root  176 Jul 10 22:25 log.txt
-rw-r--r-- 1 root root  116 Jul 10 17:22 README.md
root@v399369:~/sdig# rm /root/sdig/smart_backdate_farm.py
root@v399369:~/sdig# nano /root/sdig/smart_backdate_farm.py
root@v399369:~/sdig# cd /root/sdig
python3 smart_backdate_farm.py
üìÖ –î–∞—Ç–∞: 2025-05-29 | –°–µ–≥–æ–¥–Ω—è: 3 –∫–æ–º–º–∏—Ç–æ–≤
‚è≥ –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∫–æ–º–º–∏—Ç–∞–º–∏: —Å–ª—É—á–∞–π–Ω–æ –æ—Ç 30 –¥–æ 60 —Å–µ–∫—É–Ω–¥
‚û°Ô∏è –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: /root/sdig/gas-predictor
[main f4fe1cb] Backdated commit #1
 Date: Thu May 29 12:00:00 2025 +0300
 Committer: root <root@v399369.hosted-by-vdsina.com>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 1 insertion(+)
ERROR: Repository not found.
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
‚è≥ –ñ–¥—ë–º 51 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –∫–æ–º–º–∏—Ç–æ–º...
‚û°Ô∏è –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: /root/sdig/wallet-batch-sender
[main adc7d9a] Backdated commit #2
 Date: Thu May 29 12:00:00 2025 +0300
 Committer: root <root@v399369.hosted-by-vdsina.com>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 1 insertion(+)
ERROR: Repository not found.
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
‚è≥ –ñ–¥—ë–º 49 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –∫–æ–º–º–∏—Ç–æ–º...
‚û°Ô∏è –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: /root/sdig/node-health-checker
[main 4a0a577] Backdated commit #3
 Date: Thu May 29 12:00:00 2025 +0300
 Committer: root <root@v399369.hosted-by-vdsina.com>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 2 files changed, 2 insertions(+), 1 deletion(-)
ERROR: Repository not found.
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
root@v399369:~/sdig# git -C /root/sdig/gas-predictor rev-parse --is-inside-work-tree
git -C /root/sdig/wallet-batch-sender rev-parse --is-inside-work-tree
git -C /root/sdig/node-health-checker rev-parse --is-inside-work-tree
true
true
true
root@v399369:~/sdig# cd /root/sdig/gas-predictor
echo "test $(date)" >> README.md
git add README.md
git commit -m "üß™ test commit"
git push origin main
[main 37d0643] üß™ test commit
 Committer: root <root@v399369.hosted-by-vdsina.com>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 1 insertion(+)
ERROR: Repository not found.
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
root@v399369:~/sdig/gas-predictor# git config --global user.name "tomilna"
git config --global user.email "tomilna@github.com"
root@v399369:~/sdig/gas-predictor# echo "Updated on $(date)" >> README.md
root@v399369:~/sdig/gas-predictor# git add README.md
git commit -m "Test push after SSH setup"
[main da7d65d] Test push after SSH setup
 1 file changed, 1 insertion(+)
root@v399369:~/sdig/gas-predictor# git push origin main
ERROR: Repository not found.
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
root@v399369:~/sdig/gas-predictor# eval "$(ssh-agent -s)"
ssh-add ~/.ssh/id_ed25519
Agent pid 126833
Identity added: /root/.ssh/id_ed25519 (tomilna@github.com)
root@v399369:~/sdig/gas-predictor# ssh -T git@github.com
Hi tominla! You've successfully authenticated, but GitHub does not provide shell access.
root@v399369:~/sdig/gas-predictor# git remote -v
origin	git@github.com:tomilna/gas-predictor.git (fetch)
origin	git@github.com:tomilna/gas-predictor.git (push)
root@v399369:~/sdig/gas-predictor# git push origin main
ERROR: Repository not found.
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
root@v399369:~/sdig/gas-predictor# git push origin main
ERROR: Repository not found.
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
root@v399369:~/sdig/gas-predictor# git remote set-url origin git@github.com:tomilna/gas-predictor.git
root@v399369:~/sdig/gas-predictor# git push origin main
ERROR: Repository not found.
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
root@v399369:~/sdig/gas-predictor# ssh -T git@github.com
Hi tominla! You've successfully authenticated, but GitHub does not provide shell access.
root@v399369:~/sdig/gas-predictor# git -C /root/sdig/gas-predictor remote -v
git -C /root/sdig/wallet-batch-sender remote -v
git -C /root/sdig/node-health-checker remote -v
origin	git@github.com:tomilna/gas-predictor.git (fetch)
origin	git@github.com:tomilna/gas-predictor.git (push)
origin	git@github.com:tomilna/wallet-batch-sender.git (fetch)
origin	git@github.com:tomilna/wallet-batch-sender.git (push)
origin	git@github.com:tomilna/node-health-checker.git (fetch)
origin	git@github.com:tomilna/node-health-checker.git (push)
root@v399369:~/sdig/gas-predictor# git -C /root/sdig/gas-predictor remote set-url origin git@github.com:tomilna/gas-predictor.git
git -C /root/sdig/wallet-batch-sender remote set-url origin git@github.com:tomilna/wallet-batch-sender.git
git -C /root/sdig/node-health-checker remote set-url origin git@github.com:tomilna/node-health-checker.git
root@v399369:~/sdig/gas-predictor# cd /root/sdig/gas-predictor
git push origin main
ERROR: Repository not found.
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
root@v399369:~/sdig/gas-predictor# git config --global --unset credential.helper
rm -rf ~/.git-credentials
root@v399369:~/sdig/gas-predictor# ssh-add -l
256 SHA256:yuqiNMwZdU1SBSUFsBbb8pG5J8PUC8u8dXMKFVgmRYQ tomilna@github.com (ED25519)
root@v399369:~/sdig/gas-predictor# cd /root/sdig/gas-predictor
git remote set-url origin git@github.com:tomilna/gas-predictor.git
git pull origin main --rebase
ERROR: Repository not found.
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
root@v399369:~/sdig/gas-predictor# cd /root/sdig/gas-predictor
rm -rf .git
root@v399369:~/sdig/gas-predictor# git init
git remote add origin git@github.com:tomilna/gas-predictor.git
git add .
git commit -m "Initial push after SSH reset"
git push -u origin main
hint: Using 'master' as the name for the initial branch. This default branch name
hint: is subject to change. To configure the initial branch name to use in all
hint: of your new repositories, which will suppress this warning, call:
hint:
hint: 	git config --global init.defaultBranch <name>
hint:
hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
hint: 'development'. The just-created branch can be renamed via this command:
hint:
hint: 	git branch -m <name>
Initialized empty Git repository in /root/sdig/gas-predictor/.git/
[master (root-commit) 138c83b] Initial push after SSH reset
 2 files changed, 9 insertions(+)
 create mode 100644 README.md
 create mode 100644 log.txt
error: src refspec main does not match any
error: failed to push some refs to 'github.com:tomilna/gas-predictor.git'
root@v399369:~/sdig/gas-predictor# git branch -M main
git push -u origin main
ERROR: Repository not found.
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
root@v399369:~/sdig/gas-predictor#
root@v399369:~/sdig/gas-predictor#
root@v399369:~/sdig/gas-predictor#
root@v399369:~/sdig/gas-predictor# rm -rf /root/sdig/gas-predictor/.git
root@v399369:~/sdig/gas-predictor# cd /root/sdig/gas-predictor
git init
git remote add origin git@github.com:tomilna/gas-predictor.git
git branch -M main
hint: Using 'master' as the name for the initial branch. This default branch name
hint: is subject to change. To configure the initial branch name to use in all
hint: of your new repositories, which will suppress this warning, call:
hint:
hint: 	git config --global init.defaultBranch <name>
hint:
hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
hint: 'development'. The just-created branch can be renamed via this command:
hint:
hint: 	git branch -m <name>
Initialized empty Git repository in /root/sdig/gas-predictor/.git/
root@v399369:~/sdig/gas-predictor# ssh-add -l
256 SHA256:yuqiNMwZdU1SBSUFsBbb8pG5J8PUC8u8dXMKFVgmRYQ tomilna@github.com (ED25519)
root@v399369:~/sdig/gas-predictor# echo "init on $(date)" >> README.md
git add .
git commit -m "First working push via SSH"
[main (root-commit) 0064810] First working push via SSH
 2 files changed, 10 insertions(+)
 create mode 100644 README.md
 create mode 100644 log.txt
root@v399369:~/sdig/gas-predictor# git push -u origin main
ERROR: Repository not found.
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
root@v399369:~/sdig/gas-predictor# cd /root/sdig/gas-predictor
git remote remove origin
git remote add origin git@github.com:tomilna/gas-predictor.git
root@v399369:~/sdig/gas-predictor# git push -u origin main
ERROR: Repository not found.
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
root@v399369:~/sdig/gas-predictor# cd ~
git clone git@github.com:tomilna/gas-predictor.git sdig-clone
cp -r /root/sdig/gas-predictor/* ~/sdig-clone/
cd ~/sdig-clone
git add .
git commit -m "Final fix push"
git push origin main
Cloning into 'sdig-clone'...
ERROR: Repository not found.
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
cp: target '/root/sdig-clone/' is not a directory
-bash: cd: /root/sdig-clone: No such file or directory
fatal: not a git repository (or any of the parent directories): .git
fatal: not a git repository (or any of the parent directories): .git
fatal: not a git repository (or any of the parent directories): .git
root@v399369:~# rm -rf /root/sdig/gas-predictor
root@v399369:~# git clone git@github.com:tomilna/gas-predictor.git /root/sdig/gas-predictor
Cloning into '/root/sdig/gas-predictor'...
ERROR: Repository not found.
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
root@v399369:~# eval "$(ssh-agent -s)"
ssh-add ~/.ssh/id_ed25519
Agent pid 127656
Identity added: /root/.ssh/id_ed25519 (tomilna@github.com)
root@v399369:~# cp -r /root/sdig/gas-predictor.old/* /root/sdig/gas-predictor/
cp: cannot stat '/root/sdig/gas-predictor.old/*': No such file or directory
root@v399369:~# cd /root/sdig/gas-predictor
git add .
git commit -m "Final push from clean clone"
git push origin main
-bash: cd: /root/sdig/gas-predictor: No such file or directory
fatal: not a git repository (or any of the parent directories): .git
fatal: not a git repository (or any of the parent directories): .git
fatal: not a git repository (or any of the parent directories): .git
root@v399369:~# nano ~/.ssh/config
root@v399369:~# ssh -T git@github.com
Hi tominla! You've successfully authenticated, but GitHub does not provide shell access.
root@v399369:~# git clone git@github.com:tomilna/gas-predictor.git /root/sdig/gas-predictor
Cloning into '/root/sdig/gas-predictor'...
ERROR: Repository not found.
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
root@v399369:~# rm ~/.ssh/id_ed25519
rm ~/.ssh/id_ed25519.pub
root@v399369:~# ls -la /root/sdig/gas-predictor/.git
ls: cannot access '/root/sdig/gas-predictor/.git': No such file or directory
root@v399369:~# cd sdig
ls -la
total 40
drwxr-xr-x  5 root root 4096 Jul 10 23:59 .
drwx------ 12 root root 4096 Jul 10 23:54 ..
-rw-r--r--  1 root root    1 Jul 10 22:34 farm_state.txt
drwxr-xr-x  3 root root 4096 Jul 10 21:45 node-health-checker
-rw-r--r--  1 root root  101 Jul 10 19:10 parser.py
-rw-r--r--  1 root root   87 Jul 10 19:39 repos.txt
-rw-r--r--  1 root root 2213 Jul 10 22:34 smart_backdate_farm.py
drwxr-xr-x  2 root root 4096 Jul 10 19:10 utils
-rw-r--r--  1 root root   59 Jul 10 19:10 validate.py
drwxr-xr-x  3 root root 4096 Jul 10 21:33 wallet-batch-sender
root@v399369:~/sdig# git init
hint: Using 'master' as the name for the initial branch. This default branch name
hint: is subject to change. To configure the initial branch name to use in all
hint: of your new repositories, which will suppress this warning, call:
hint:
hint: 	git config --global init.defaultBranch <name>
hint:
hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
hint: 'development'. The just-created branch can be renamed via this command:
hint:
hint: 	git branch -m <name>
Initialized empty Git repository in /root/sdig/.git/
root@v399369:~/sdig# git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	farm_state.txt
	node-health-checker/
	parser.py
	repos.txt
	smart_backdate_farm.py
	utils/
	validate.py
	wallet-batch-sender/

nothing added to commit but untracked files present (use "git add" to track)
root@v399369:~/sdig# git add .
git commit -m "initial commit for sdig tools"
warning: adding embedded git repository: node-health-checker
hint: You've added another git repository inside your current repository.
hint: Clones of the outer repository will not contain the contents of
hint: the embedded repository and will not know how to obtain it.
hint: If you meant to add a submodule, use:
hint:
hint: 	git submodule add <url> node-health-checker
hint:
hint: If you added this path by mistake, you can remove it from the
hint: index with:
hint:
hint: 	git rm --cached node-health-checker
hint:
hint: See "git help submodule" for more information.
warning: adding embedded git repository: wallet-batch-sender
[master (root-commit) d3a08d6] initial commit for sdig tools
 8 files changed, 82 insertions(+)
 create mode 100644 farm_state.txt
 create mode 160000 node-health-checker
 create mode 100644 parser.py
 create mode 100644 repos.txt
 create mode 100644 smart_backdate_farm.py
 create mode 100644 utils/formatter.py
 create mode 100644 validate.py
 create mode 160000 wallet-batch-sender
root@v399369:~/sdig# cd ~/sdig
nano gas_predictor.py
root@v399369:~/sdig# git add gas_predictor.py
git commit -m "add gas prediction tool to sdig suite"
[master 905b285] add gas prediction tool to sdig suite
 1 file changed, 12 insertions(+)
 create mode 100644 gas_predictor.py
root@v399369:~/sdig# git push origin main
error: src refspec main does not match any
error: failed to push some refs to 'origin'
root@v399369:~/sdig# git branch
* master
root@v399369:~/sdig# git branch -M main
root@v399369:~/sdig# git push -u origin main
fatal: 'origin' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
root@v399369:~/sdig# mkdir ~/gas-predictor
cp ~/sdig/gas_predictor.py ~/gas-predictor/
cd ~/gas-predictor
root@v399369:~/gas-predictor# git init
git add gas_predictor.py
git commit -m "initial commit: gas predictor"
hint: Using 'master' as the name for the initial branch. This default branch name
hint: is subject to change. To configure the initial branch name to use in all
hint: of your new repositories, which will suppress this warning, call:
hint:
hint: 	git config --global init.defaultBranch <name>
hint:
hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
hint: 'development'. The just-created branch can be renamed via this command:
hint:
hint: 	git branch -m <name>
Initialized empty Git repository in /root/gas-predictor/.git/
[master (root-commit) 5157b5e] initial commit: gas predictor
 1 file changed, 12 insertions(+)
 create mode 100644 gas_predictor.py
root@v399369:~/gas-predictor# gh repo create gas-predictor --public --source=. --remote=origin --push
Command 'gh' not found, but can be installed with:
snap install gh       # version 2.6.0-15-g1a10fd5a, or
apt  install gh       # version 2.4.0+dfsg1-2
apt  install gitsome  # version 0.8.0+ds-6ubuntu1
See 'snap info gh' for additional versions.
root@v399369:~/gas-predictor# cd ~/gas-predictor
ls
gas_predictor.py
root@v399369:~/gas-predictor# apt update
apt install gh -y
Get:1 http://security.ubuntu.com/ubuntu jammy-security InRelease [129 kB]
Get:2 http://security.ubuntu.com/ubuntu jammy-security/main amd64 Packages [2,474 kB]
Get:3 http://security.ubuntu.com/ubuntu jammy-security/main Translation-en [370 kB]
Get:4 http://security.ubuntu.com/ubuntu jammy-security/restricted amd64 Packages [3,767 kB]
Get:5 http://security.ubuntu.com/ubuntu jammy-security/restricted Translation-en [677 kB]
Get:6 http://security.ubuntu.com/ubuntu jammy-security/universe amd64 Packages [990 kB]
Get:7 http://security.ubuntu.com/ubuntu jammy-security/universe Translation-en [214 kB]
Hit:8 http://ru.archive.ubuntu.com/ubuntu jammy InRelease
Get:9 http://ru.archive.ubuntu.com/ubuntu jammy-updates InRelease [128 kB]
Get:10 http://ru.archive.ubuntu.com/ubuntu jammy-backports InRelease [127 kB]
Get:11 http://ru.archive.ubuntu.com/ubuntu jammy-updates/main amd64 Packages [2,723 kB]
Get:12 http://ru.archive.ubuntu.com/ubuntu jammy-updates/main Translation-en [434 kB]
Get:13 http://ru.archive.ubuntu.com/ubuntu jammy-updates/restricted amd64 Packages [3,898 kB]
Get:14 http://ru.archive.ubuntu.com/ubuntu jammy-updates/restricted Translation-en [698 kB]
Get:15 http://ru.archive.ubuntu.com/ubuntu jammy-updates/universe amd64 Packages [1,221 kB]
Get:16 http://ru.archive.ubuntu.com/ubuntu jammy-updates/universe Translation-en [301 kB]
Get:17 http://ru.archive.ubuntu.com/ubuntu jammy-backports/main amd64 Packages [68.8 kB]
Get:18 http://ru.archive.ubuntu.com/ubuntu jammy-backports/universe amd64 Packages [30.0 kB]
Get:19 http://ru.archive.ubuntu.com/ubuntu jammy-backports/universe Translation-en [16.5 kB]
Fetched 18.3 MB in 4s (4,719 kB/s)
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
22 packages can be upgraded. Run 'apt list --upgradable' to see them.
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
The following NEW packages will be installed:
  gh
0 upgraded, 1 newly installed, 0 to remove and 22 not upgraded.
Need to get 6,242 kB of archives.
After this operation, 33.7 MB of additional disk space will be used.
Get:1 http://ru.archive.ubuntu.com/ubuntu jammy/universe amd64 gh amd64 2.4.0+dfsg1-2 [6,242 kB]
Fetched 6,242 kB in 1s (10.9 MB/s)
Selecting previously unselected package gh.
(Reading database ... 123603 files and directories currently installed.)
Preparing to unpack .../gh_2.4.0+dfsg1-2_amd64.deb ...
Unpacking gh (2.4.0+dfsg1-2) ...
Setting up gh (2.4.0+dfsg1-2) ...
Processing triggers for man-db (2.10.2-1) ...
Scanning processes...
Scanning candidates...
Scanning linux images...

Restarting services...
Service restarts being deferred:
 /etc/needrestart/restart.d/dbus.service
 systemctl restart getty@tty1.service
 systemctl restart networkd-dispatcher.service
 systemctl restart systemd-logind.service

No containers need to be restarted.

No user sessions are running outdated binaries.

No VM guests are running outdated hypervisor (qemu) binaries on this host.
root@v399369:~/gas-predictor# gh --version
gh version 2.4.0+dfsg1 (2022-03-23 Ubuntu 2.4.0+dfsg1-2)
https://github.com/cli/cli/releases/latest
root@v399369:~/gas-predictor# gh auth login
? What account do you want to log into? GitHub.com
? What is your preferred protocol for Git operations? HTTPS
? Authenticate Git with your GitHub credentials? Yes
? How would you like to authenticate GitHub CLI? Paste an authentication token
Tip: you can generate a Personal Access Token here https://github.com/settings/tokens
The minimum required scopes are 'repo', 'read:org', 'workflow'.
? Paste your authentication token: ****************************************
error validating token: missing required scope 'read:org'
root@v399369:~/gas-predictor# gh auth login
? What account do you want to log into? GitHub.com
? What is your preferred protocol for Git operations? HTTPS
X Sorry, your reply was invalid: "–Ω" is not a valid answer, please try again.
? Authenticate Git with your GitHub credentials? Yes
? How would you like to authenticate GitHub CLI? Paste an authentication token
Tip: you can generate a Personal Access Token here https://github.com/settings/tokens
The minimum required scopes are 'repo', 'read:org', 'workflow'.
? Paste your authentication token: ****************************************
error using api: Message: API rate limit exceeded for user ID 155016341., Locations: []
root@v399369:~/gas-predictor#
Session Contents Restored on 11 Jul 2025 at 12:06
Last login: Fri Jul 11 12:06:45 on console
/Users/imaster/.zprofile:2: command not found: üçÉ
imaster@time ~ % ssh root@146.103.104.245
root@146.103.104.245's password:
Welcome to Ubuntu 22.04.5 LTS (GNU/Linux 5.15.0-134-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/pro

 System information as of Fri Jul 11 03:03:32 PM MSK 2025

  System load:  0.0               Processes:             93
  Usage of /:   62.8% of 9.76GB   Users logged in:       0
  Memory usage: 26%               IPv4 address for ens3: 146.103.104.245
  Swap usage:   0%

 * Strictly confined Kubernetes makes edge and IoT secure. Learn how MicroK8s
   just raised the bar for easy, resilient and secure K8s cluster deployment.

   https://ubuntu.com/engage/secure-kubernetes-at-the-edge

Expanded Security Maintenance for Applications is not enabled.

19 updates can be applied immediately.
19 of these updates are standard security updates.
To see these additional updates run: apt list --upgradable

2 additional security updates can be applied with ESM Apps.
Learn more about enabling ESM Apps service at https://ubuntu.com/esm


*** System restart required ***
Last login: Thu Jul 10 18:10:03 2025 from 146.103.104.245
root@v399369:~# git config --global user.name "Maudykaz"
git config --global user.email "uwirhfsqim@rambler.ru"
root@v399369:~# git clone https://github.com/Maudykaz/EVM---SmartContracts.git
cd EVM---SmartContracts
Cloning into 'EVM---SmartContracts'...
remote: Enumerating objects: 6, done.
remote: Counting objects: 100% (6/6), done.
remote: Compressing objects: 100% (5/5), done.
remote: Total 6 (delta 0), reused 0 (delta 0), pack-reused 0 (from 0)
Receiving objects: 100% (6/6), done.
root@v399369:~/EVM---SmartContracts# echo "# test" >> log.txt
git add log.txt
git commit -m "test commit"
[main 22de3ec] test commit
 1 file changed, 1 insertion(+)
 create mode 100644 log.txt
root@v399369:~/EVM---SmartContracts# git push origin main
Username for 'https://github.com': Maudykaz
Password for 'https://Maudykaz@github.com':
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 317 bytes | 317.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/Maudykaz/EVM---SmartContracts.git
   8af5088..22de3ec  main -> main
root@v399369:~/EVM---SmartContracts# git config --global credential.helper store
root@v399369:~/EVM---SmartContracts# for i in {1..9}; do
  echo "fake entry $i" >> log.txt
  git add log.txt
  export GIT_AUTHOR_DATE="$(date -d "$((RANDOM % 90 + 1)) days ago" '+%Y-%m-%dT%H:%M:%S')"
  export GIT_COMMITTER_DATE="$GIT_AUTHOR_DATE"
  git commit -m "fake commit $i"
  echo "‚úÖ –ö–æ–º–º–∏—Ç $i —Å–¥–µ–ª–∞–Ω –Ω–∞ –¥–∞—Ç—É $GIT_AUTHOR_DATE"
  sleep $((RANDOM % 31 + 30))
done
[main d77f721] fake commit 1
 1 file changed, 1 insertion(+)
‚úÖ –ö–æ–º–º–∏—Ç 1 —Å–¥–µ–ª–∞–Ω –Ω–∞ –¥–∞—Ç—É 2025-06-28T15:11:58
[main 17f861e] fake commit 2
 1 file changed, 1 insertion(+)
‚úÖ –ö–æ–º–º–∏—Ç 2 —Å–¥–µ–ª–∞–Ω –Ω–∞ –¥–∞—Ç—É 2025-05-23T15:12:36
[main 1e972b4] fake commit 3
 1 file changed, 1 insertion(+)
‚úÖ –ö–æ–º–º–∏—Ç 3 —Å–¥–µ–ª–∞–Ω –Ω–∞ –¥–∞—Ç—É 2025-05-10T15:13:26
[main 4d1e79e] fake commit 4
 1 file changed, 1 insertion(+)
‚úÖ –ö–æ–º–º–∏—Ç 4 —Å–¥–µ–ª–∞–Ω –Ω–∞ –¥–∞—Ç—É 2025-05-17T15:13:56
[main f74328c] fake commit 5
 1 file changed, 1 insertion(+)
‚úÖ –ö–æ–º–º–∏—Ç 5 —Å–¥–µ–ª–∞–Ω –Ω–∞ –¥–∞—Ç—É 2025-04-22T15:14:37
[main 6aebd65] fake commit 6
 1 file changed, 1 insertion(+)
‚úÖ –ö–æ–º–º–∏—Ç 6 —Å–¥–µ–ª–∞–Ω –Ω–∞ –¥–∞—Ç—É 2025-06-25T15:15:37
[main 18256e6] fake commit 7
 1 file changed, 1 insertion(+)
‚úÖ –ö–æ–º–º–∏—Ç 7 —Å–¥–µ–ª–∞–Ω –Ω–∞ –¥–∞—Ç—É 2025-04-13T15:16:23
[main 6ece2ef] fake commit 8
 1 file changed, 1 insertion(+)
‚úÖ –ö–æ–º–º–∏—Ç 8 —Å–¥–µ–ª–∞–Ω –Ω–∞ –¥–∞—Ç—É 2025-05-11T15:17:05
[main 63f35d7] fake commit 9
 1 file changed, 1 insertion(+)
‚úÖ –ö–æ–º–º–∏—Ç 9 —Å–¥–µ–ª–∞–Ω –Ω–∞ –¥–∞—Ç—É 2025-05-12T15:17:35
root@v399369:~/EVM---SmartContracts# git push origin main
Username for 'https://github.com': touch log.txt

for i in {1..9}; do
  days_ago=$((RANDOM % 90 + 1))
  date_str=$(date -d "$days_ago days ago" '+%Y-%m-%dT%H:%M:%S')
  echo "Entry $i - $date_str" >> log.txt
  git add log.txt
  GIT_AUTHOR_DATE="$date_str" GIT_COMMITTER_DATE="$date_str" git commit -m "Commit $i from $date_str"
done

git push origin main
Password for 'https://touch%20log.txt@github.com':
Enumerating objects: 29, done.
Counting objects: 100% (29/29), done.
Compressing objects: 100% (24/24), done.
Writing objects: 100% (27/27), 2.09 KiB | 2.09 MiB/s, done.
Total 27 (delta 14), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (14/14), completed with 1 local object.
To https://github.com/Maudykaz/EVM---SmartContracts.git
   22de3ec..63f35d7  main -> main
root@v399369:~/EVM---SmartContracts# git clone https://github.com/Maudykaz/web3-wallet-scanner.git
cd web3-wallet-scanner
Cloning into 'web3-wallet-scanner'...
warning: You appear to have cloned an empty repository.
root@v399369:~/EVM---SmartContracts/web3-wallet-scanner# cd ~
rm -rf EVM---SmartContracts/web3-wallet-scanner
root@v399369:~# cd ~
mkdir dev
cd dev
git clone https://github.com/Maudykaz/web3-wallet-scanner.git
cd web3-wallet-scanner
Cloning into 'web3-wallet-scanner'...
warning: You appear to have cloned an empty repository.
root@v399369:~/dev/web3-wallet-scanner# cat <<EOF > scanner.py
import json
import requests
from web3 import Web3
from tabulate import tabulate

RPC = "https://rpc.ankr.com/eth"
w3 = Web3(Web3.HTTPProvider(RPC))

def load_wallets(filename):
    with open(filename, "r") as f:
        return [line.strip() for line in f if line.strip().startswith("0x")]

def get_eth_balance(address):
    balance_wei = w3.eth.get_balance(address)
    return w3.fromWei(balance_wei, 'ether')

def get_ens_name(address):
    try:
        return w3.ens.name(address) or "-"
    except:
        return "-"

def main():
    wallets = load_wallets("wallets.txt")
    results = []

    for addr in wallets:
        balance = get_eth_balance(addr)
        ens = get_ens_name(addr)
        results.append([addr, f"{balance:.4f} ETH", ens])

    print(tabulate(results, headers=["Address", "Balance", "ENS Name"]))

if __name__ == "__main__":
    main()
EOF
root@v399369:~/dev/web3-wallet-scanner# nano scanner.py
root@v399369:~/dev/web3-wallet-scanner# cat <<EOF > wallets.txt
0x742d35Cc6634C0532925a3b844Bc454e4438f44e
0x00000000219ab540356cBB839Cbe05303d7705Fa
EOF
root@v399369:~/dev/web3-wallet-scanner# cat <<EOF > requirements.txt
web3
tabulate
EOF
root@v399369:~/dev/web3-wallet-scanner# cat <<EOF > README.md
# web3-wallet-scanner

A lightweight CLI tool to scan Ethereum-compatible wallet addresses and display real-time balances, token holdings (ERC-20), and ENS reverse records using public RPC endpoints.

Useful for validators, airdrop hunters, retrodrop checkers, and Web3 explorers.
EOF
root@v399369:~/dev/web3-wallet-scanner# git add .
git commit -m "Initial commit: working scanner CLI"
git push origin main
[main (root-commit) b9bc94b] Initial commit: working scanner CLI
 4 files changed, 44 insertions(+)
 create mode 100644 README.md
 create mode 100644 requirements.txt
 create mode 100644 scanner.py
 create mode 100644 wallets.txt
Enumerating objects: 6, done.
Counting objects: 100% (6/6), done.
Compressing objects: 100% (5/5), done.
Writing objects: 100% (6/6), 1.07 KiB | 1.07 MiB/s, done.
Total 6 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/Maudykaz/web3-wallet-scanner.git
 * [new branch]      main -> main
root@v399369:~/dev/web3-wallet-scanner# cd ~/dev
git clone https://github.com/Maudykaz/evm-calldata-encoder.git
cd evm-calldata-encoder
Cloning into 'evm-calldata-encoder'...
warning: You appear to have cloned an empty repository.
root@v399369:~/dev/evm-calldata-encoder# cat <<EOF > encode.py
from web3 import Web3
import sys

def encode_function(method, args):
    w3 = Web3()
    signature = f"{method}"
    types = signature[signature.find('(')+1 : signature.find(')')].split(',')
    func_selector = w3.keccak(text=signature)[:4]
    encoded_args = w3.codec.encode_abi(types, args)
    return '0x' + (func_selector + encoded_args).hex()

if __name__ == "__main__":
    method = input("Enter method (e.g., transfer(address,uint256)): ")
    raw_args = input("Enter arguments comma-separated: ")
    args = [eval(arg.strip()) for arg in raw_args.split(',')]
    calldata = encode_function(method, args)
    print("Encoded calldata:", calldata)
EOF
root@v399369:~/dev/evm-calldata-encoder# cat <<EOF > requirements.txt
web3
EOF
root@v399369:~/dev/evm-calldata-encoder# cat <<EOF > README.md
# evm-calldata-encoder

Simple command-line tool to encode Ethereum smart contract calldata using method signatures and arguments.

Useful for debugging, contract interaction, and low-level simulations.
EOF
root@v399369:~/dev/evm-calldata-encoder# mkdir -p examples
cat <<EOF > examples/transfer_example.txt
Method: transfer(address,uint256)
Args: "0x1234567890123456789012345678901234567890", 1000000000000000000
EOF
root@v399369:~/dev/evm-calldata-encoder# GIT_AUTHOR_DATE="$(date -d '43 days ago' +'%Y-%m-%dT12:00:00')" \
GIT_COMMITTER_DATE="\$GIT_AUTHOR_DATE" \
git commit -m "Initial commit: calldata encoder CLI"
fatal: invalid date format: $GIT_AUTHOR_DATE
root@v399369:~/dev/evm-calldata-encoder# git add .
git commit -m "Initial commit: calldata encoder CLI"
[main (root-commit) 7efb8ee] Initial commit: calldata encoder CLI
 4 files changed, 25 insertions(+)
 create mode 100644 README.md
 create mode 100644 encode.py
 create mode 100644 examples/transfer_example.txt
 create mode 100644 requirements.txt
root@v399369:~/dev/evm-calldata-encoder# git push origin main
Enumerating objects: 7, done.
Counting objects: 100% (7/7), done.
Compressing objects: 100% (5/5), done.
Writing objects: 100% (7/7), 981 bytes | 981.00 KiB/s, done.
Total 7 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/Maudykaz/evm-calldata-encoder.git
 * [new branch]      main -> main
root@v399369:~/dev/evm-calldata-encoder# cd ~/dev
git clone https://github.com/Maudykaz/eth-rpc-benchmark.git
cd eth-rpc-benchmark
Cloning into 'eth-rpc-benchmark'...
warning: You appear to have cloned an empty repository.
root@v399369:~/dev/eth-rpc-benchmark# cat <<EOF > benchmark.py
import requests
import time
import json
from datetime import datetime

def benchmark_rpc(url):
    stats = {
        "url": url,
        "latencies": [],
        "success": 0,
        "fail": 0
    }

    for _ in range(5):
        payload = {
            "jsonrpc": "2.0",
            "method": "eth_blockNumber",
            "params": [],
            "id": 1
        }
        start = time.time()
        try:
            r = requests.post(url, json=payload, timeout=5)
            latency = round((time.time() - start) * 1000, 2)
            if r.status_code == 200 and "result" in r.json():
                stats["latencies"].append(latency)
                stats["success"] += 1
            else:
                stats["fail"] += 1
        except:
            stats["fail"] += 1

    return stats

def main():
    with open("endpoints.txt", "r") as f:
        urls = [line.strip() for line in f.readlines() if line.strip()]

EOF main()_ == "__main__":aved to results.json.")
root@v399369:~/dev/eth-rpc-benchmark# cat <<EOF > endpoints.txt
https://rpc.ankr.com/eth
https://ethereum.publicnode.com
EOF
root@v399369:~/dev/eth-rpc-benchmark# cat <<EOF > requirements.txt
requests
EOF
root@v399369:~/dev/eth-rpc-benchmark# cat <<EOF > README.md
# eth-rpc-benchmark

Simple benchmarking tool for Ethereum JSON-RPC endpoints.
Tests latency, throughput, and success rate of eth_call and eth_blockNumber across mult
iple RPC providers.
EOF
root@v399369:~/dev/eth-rpc-benchmark# git add .
root@v399369:~/dev/eth-rpc-benchmark# GIT_AUTHOR_DATE="$(date -d '29 days ago' +'%Y-%m-%dT12:00:00')" \
GIT_COMMITTER_DATE="\$GIT_AUTHOR_DATE" \
git commit -m "Initial commit: eth RPC benchmarking tool"
fatal: invalid date format: $GIT_AUTHOR_DATE
root@v399369:~/dev/eth-rpc-benchmark# GIT_AUTHOR_DATE="$(date -d '29 days ago' +'%Y-%m-%dT12:00:00')" \
GIT_COMMITTER_DATE="$(date -d '29 days ago' +'%Y-%m-%dT12:00:00')" \
git commit -m "Initial commit: eth RPC benchmarking tool"
[main (root-commit) 48a58c6] Initial commit: eth RPC benchmarking tool
 4 files changed, 58 insertions(+)
 create mode 100644 README.md
 create mode 100644 benchmark.py
 create mode 100644 endpoints.txt
 create mode 100644 requirements.txt
root@v399369:~/dev/eth-rpc-benchmark# git push origin main
Enumerating objects: 6, done.
Counting objects: 100% (6/6), done.
Compressing objects: 100% (5/5), done.
Writing objects: 100% (6/6), 1.09 KiB | 1.09 MiB/s, done.
Total 6 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/Maudykaz/eth-rpc-benchmark.git
 * [new branch]      main -> main
root@v399369:~/dev/eth-rpc-benchmark# nano ~/dev/maudykaz-farm/farm.py
root@v399369:~/dev/eth-rpc-benchmark# mkdir -p ~/dev/maudykaz-farm
nano ~/dev/maudykaz-farm/farm.py
root@v399369:~/dev/eth-rpc-benchmark# nano ~/dev/maudykaz-farm/farm.py
root@v399369:~/dev/eth-rpc-benchmark# export GH_TOKEN=YOUR_TOKEN
root@v399369:~/dev/eth-rpc-benchmark# python3 ~/dev/maudykaz-farm/farm.py
  File "/root/dev/maudykaz-farm/farm.py", line 64
    print(f\"üìÇ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: {repo_name}\")
            ^
SyntaxError: unexpected character after line continuation character
root@v399369:~/dev/eth-rpc-benchmark# nano ~/dev/maudykaz-farm/farm.py
root@v399369:~/dev/eth-rpc-benchmark# rm /root/dev/maudykaz-farm/farm.py
root@v399369:~/dev/eth-rpc-benchmark# ls /root/dev/maudykaz-farm/
root@v399369:~/dev/eth-rpc-benchmark# nano /root/dev/maudykaz-farm/farm.py
root@v399369:~/dev/eth-rpc-benchmark# python3 /root/dev/maudykaz-farm/farm.py
üìÖ 2025-03-13 | –ö–æ–º–º–∏—Ç–æ–≤ —Å–µ–≥–æ–¥–Ω—è: 1
‚ùå –§–∞–π–ª repos.txt –Ω–µ –Ω–∞–π–¥–µ–Ω.
root@v399369:~/dev/eth-rpc-benchmark# nano /root/dev/maudykaz-farm/repos.txt
root@v399369:~/dev/eth-rpc-benchmark# python3 /root/dev/maudykaz-farm/farm.py
üìÖ 2024-12-23 | –ö–æ–º–º–∏—Ç–æ–≤ —Å–µ–≥–æ–¥–Ω—è: 1
‚ùå –§–∞–π–ª repos.txt –Ω–µ –Ω–∞–π–¥–µ–Ω.
root@v399369:~/dev/eth-rpc-benchmark# nano /root/dev/maudykaz-farm/repos.txt
root@v399369:~/dev/eth-rpc-benchmark# python3 /root/dev/maudykaz-farm/farm.py
üìÖ 2024-03-05 | –ö–æ–º–º–∏—Ç–æ–≤ —Å–µ–≥–æ–¥–Ω—è: 1
‚ùå –§–∞–π–ª repos.txt –Ω–µ –Ω–∞–π–¥–µ–Ω.
root@v399369:~/dev/eth-rpc-benchmark# nano /root/dev/maudykaz-farm/repos.txt
root@v399369:~/dev/eth-rpc-benchmark# ls /root/dev/maudykaz-farm/
farm.py  repos.txt
root@v399369:~/dev/eth-rpc-benchmark# cd /root/dev/maudykaz-farm
python3 farm.py
üìÖ 2025-02-03 | –ö–æ–º–º–∏—Ç–æ–≤ —Å–µ–≥–æ–¥–Ω—è: 1
üß™ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: web3-wallet-scanner
‚ö†Ô∏è –§–∞–π–ª script.py –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ web3-wallet-scanner, —Å–æ–∑–¥–∞—é –Ω–æ–≤—ã–π
‚úèÔ∏è –ò–∑–º–µ–Ω—ë–Ω —Ñ–∞–π–ª: script.py
[main ab795cb] Update web3-wallet-scanner: 1
 1 file changed, 2 insertions(+)
 create mode 100644 script.py
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 306 bytes | 306.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/Maudykaz/web3-wallet-scanner.git
   b9bc94b..ab795cb  main -> main
root@v399369:~/dev/maudykaz-farm# nano /root/dev/maudykaz-farm/farm_cron.sh
root@v399369:~/dev/maudykaz-farm# chmod +x /root/dev/maudykaz-farm/farm_cron.sh
root@v399369:~/dev/maudykaz-farm# crontab -e
crontab: installing new crontab
root@v399369:~/dev/maudykaz-farm# cd /root/dev/web3-wallet-scanner
root@v399369:~/dev/web3-wallet-scanner# git tag v0.1.0
root@v399369:~/dev/web3-wallet-scanner# git push origin v0.1.0
Total 0 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/Maudykaz/web3-wallet-scanner.git
 * [new tag]         v0.1.0 -> v0.1.0
root@v399369:~/dev/web3-wallet-scanner# apt update && apt install gh -y
Hit:1 http://ru.archive.ubuntu.com/ubuntu jammy InRelease
Get:2 http://security.ubuntu.com/ubuntu jammy-security InRelease [129 kB]
Get:3 http://ru.archive.ubuntu.com/ubuntu jammy-updates InRelease [128 kB]
Get:4 http://ru.archive.ubuntu.com/ubuntu jammy-backports InRelease [127 kB]
Get:5 http://ru.archive.ubuntu.com/ubuntu jammy-updates/main amd64 Packages [2,723 kB]
Get:6 http://ru.archive.ubuntu.com/ubuntu jammy-updates/universe amd64 Packages [1,221 kB]
Fetched 4,328 kB in 1s (3,117 kB/s)
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
  GNU nano 6.2                /root/dev/maudykaz-farm/farm.py
# === –ß–ê–°–¢–¨ 1: –ò–º–ø–æ—Ä—Ç—ã –∏ –±–∞–∑–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ===

import os
import random
import subprocess
import time
from datetime import datetime, timedelta

# üß© –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
REPO_LIST_FILE = "repos.txt"
STATE_FILE = "farm_state.txt"
LOG_FILE = "farm_log.txt"
MAX_DAYS_BACK = 500

USERNAME = "maudykaz"
EMAIL = "uwirhfsqim@rambler.ru"
# === –ß–ê–°–¢–¨ 2: –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –≤—ã–±–æ—Ä –¥–∞—Ç—ã –∫–æ–º–º–∏—Ç–∞ ===

# –ó–∞–≥—Ä—É–∂–∞–µ–º —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ –¥–Ω–∏ –∏–∑ farm_state.txt
if os.path.exists(STATE_FILE):
    with open(STATE_FILE, "r") as f:
        used_days = set(map(int, f.read().strip().split(",")))
else:
    used_days = set()

# –í—ã–±–∏—Ä–∞–µ–º –Ω–æ–≤—ã–π –¥–µ–Ω—å –¥–ª—è –∫–æ–º–º–∏—Ç–∞
available_days = [d for d in range(MAX_DAYS_BACK) if d not in used_days]
if not available_days:
    print("‚úÖ –í—Å–µ 500 –¥–Ω–µ–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã.")
    exit()

chosen_day = random.choice(available_days)
used_days.add(chosen_day)
commit_date = datetime.now() - timedelta(days=chosen_day)
